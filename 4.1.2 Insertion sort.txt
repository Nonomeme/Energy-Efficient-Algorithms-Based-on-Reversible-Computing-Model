//4.1.2 Insertion sort
//unfaithful
procedure isort1(int a[], int n, int p[])
    local int j = n-1
    from j = n-1  loop
        local int i = j
        from i = j  loop
            a[i] <=> a[i+1]
            p[i] <=> p[i+1]
            i+=1
        until i = n-1 || a[i] <= a[i+1]
        //zero clear i
        uncall min(i, p, j, n-1)
        delocal int i = 0
        j -= 1
    until j = -1
    delocal int j = -1

//hygiene
procedure isort2(int a[], int n, int p[])
    local int j = n-1
    from j = n-1  loop
        local int i = j
        from i = j  loop
            a[i] <=> a[i+1]
            p[i] <=> p[i+1]
            i+=1
        until i = n-1 || a[i] <= a[i+1]   
        from p[i] = j loop
            i -= 1
        until i = j
        delocal int i = j
        j -= 1
    until j = -1
    delocal int j = -1

//hygiene   
procedure isort3(int a[], int n, int d[])
    local int j = n-1
    from j = n-1 loop
        local int i = j
        from i = j
        loop a[i] <=> a[i+1]  i+=1
        until i = n-1 || a[i] <= a[i+1]
        d[j] += i-j
        delocal int i = d[j] + j
        j -= 1
    until j = -1
    delocal int j = -1

    
procedure min(int i, int p[], int l, int r)
    i += l
    from i = l loop         
        i += 1
    until p[i] = l

procedure perm(int p[], int n)
    local int i = 0
    from i = 0 loop
        p[i] += i
        i += 1
    until i = n
    
    delocal int i = n
    
procedure main()
    int a[] = {5,3,2,7,1,3,5}
    int n = size(a)
    int d[n] = {0}
    // int p[n] = {0}
    // 
    // call perm(p,n)
    // call isort2(a,n,p)
    call isort3(a,n,d)